CURRENT FEATURE (ongoing):

RESOURCES


CURRENT FRONTEND TASKS (ongoing):

DONE Connects new resource form to store; persists new resource instance to database on form submission; renames feature home page urls, components for clarity


FUTURE TASKS (ongoing):



Create basic CSS/Bootstrap structure for home page, journal features
  Creates mobile-first bootstrap design
  Creates basic style for home page
  Creates basic style for journal page


JOURNAL

Styles NavLink links on Journal page as buttons

Adds edit/update functionality to list of journal entries, individual entries?

Search journal entries renders list of matched journal entries (will use new fetch action, input component, Rails class method)
  Adds search bar to Journal

Add date to journal feature


OTHER FEATURES

Add advisor forms and output

Add weight tracker feature

Add community feature

Create basic CSS/Bootstrap structure for unstyled features


OVERALL APP

Moves store to separate component

Adds, installs logos to manifest.json; adds relevant link to index.html




COMPLETED TASKS:


DONE Creates new resource action creator; adds new resource action to reducer
DONE Creates, stubs new resource form
DONE Connects resources to store; maps state, asynced fetch dispatch to props
DONE Creates reducer, adds it to store
DONE Creates Resources container; renders resources instances on fetch
DONE Completes Resources home page component content; edits Resources, Community home pages paths
DONE Moves journal feature files to appropriate components subdirectory
DONE Adds navlinks to planned components; stubs App, planned components

Adds delete functionality to list of journal entries
  DONE Deletes journal entry on click

DONE Renders delete button for each journal entry; event handler successfully passes entry id to delete action creator; stubs delete action
DONE Redirects to all journals view when new entry is submitted
DONE Renders all journal entries most recent entry first; each link to an entry renders cohtent, route correctlyDONE Wraps journals, journal form links in Switch statement to make routes more precise
DONE Redirects to all journal entries view if id params entered manually, not exists
DONE Redirects to all journal entries view if id params entered manually, not exists

DONE Adds working links to views of new journal entry form, all journal entries
DONE Creates routes and renders distinct views for new journal entry form, a list of all journal entries with working links to each journal entry, and each journal entry

Make all journal entries, form into separate components:
DONE Gives journal entry form, individual journal entries their own routes
DONE Gives individual journal entries their own componentDONE Renames all-journal-entries feature Journal to AllJournalEntries; creates new component Journal; stubs component for an individual journal entry; adds Project Notes - Frontend


*** Below is before frontend/backend notes separation

DONE Clears new journal entry input fields after submission
DONE Persists new journal entries to Rails backend; renders new journal entries to journal entry list on submission; removes unneeded code
DONE Adds pry gem; adds .DS_store files to gitignore; removes unneeded code
DONE Edits JournalInput for addJournalEntry action
DONE Renders list of journal entries
DONE Imports connect for journal feature; places JournalEntries appropriately; maps journalEntries state to props
DONE Creates containers, actions folders; separates Journal component concerns into JournalContainer, fetchJournalEntries
DONE Imports compose; sets up store for thunk, compose, redux devtools
DONE Installs, imports thunk, applyMiddleware
DONE 'Fetches persisted Journal instances successfully'
DONE Adds serializer for journal
DONE Creates, stubs JournalInput
DONE Creates, stubs Journal
DONE Creates, adds Journal link to Navbar
DONE Adds Navbar, Journal routes to App
DONE Adds react-router-dom
DONE Adds store to index.js; creates, moves App to components folder
DONE Adds redux, react-redux
DONE Adds rack-cors gem, configuration
DONE Changes directory maneuvering in Procfile
DONE Successfully renders to React server