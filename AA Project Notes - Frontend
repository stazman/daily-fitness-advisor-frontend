CURRENT FEATURE (ongoing):

RESPONSIVE LAYOUT ACROSS APP


CURRENT FRONTEND TASKS (ongoing):

Establishes breakpoints for screen widths larger than 240px

  DONE Adds feature links to dropdown menu

  DONE Adds feature links to top navbar for larger device sizes

  DONE Establishes breakpoints, visibility of top navbar links

  DONE Makes bottom navbar invisible for larger device sizes

  DONE Sets, edits breakpoints for advisor, journal home page

  DONE Sets, edits breakpoints for resources home page



  Sets breakpoints for feature forms

  Sets breakpoints for feature results pages





  Increases base button link sizes
  
  
  Adjusts spacing in BottomNavbar for responsiveness
  



FUTURE TASKS (ongoing):


FOOD ADVISOR

Adds different messages depending on previous day input


NAVBARS
  
  Reorient aria controls property for BottomNavbar



UNCODED FEATURES


  Add weight tracker feature

  Add community feature

  Containers for later features:
    TrackerContainer
    WeightLossTrackerContainer (Has form for new weighing, current weight, weight history)
    HabitTracker (Shows Record of Habits for week, month, etc.)
    CommentsContainer
    CommunityContainer
    CommunityLinksContainer
    CommentsContainer
          

RESOURCES

  Makes resource titles into links that take the user to a full description/creates option to see full description on same page?

  Truncates description on all resources page

  Adds delete functionality


ADVISOR

  Add date
   
   


JOURNAL

  Set breakpoints/media queries for new journal entry textarea, row padding

  Adds edit/update functionality to list of journal entries, individual entries?

  Search journal entries renders list of matched journal entries (will use new fetch action, input component, Rails class method?)

  Adds search bar to Journal

  Add date to journal feature



OVERALL APP


  Moves store to separate component

  Adds, installs logos to manifest.json; adds relevant link to index.html?




COMPLETED TASKS: XXX

Responsive Layout Across App
  DONE Sets styling for buttons, column spacing, edits, styles message on advisor home page, for 240pxm lowest breakpoint
  DONE Sets font sizing on journal, resource home pages for 240px, lowest breakpoint
  DONE Sets styling in food Advisor form for 240px, lowest breakpoint
  DONE Sets styling in new journal entry form for 240px, lowest breakpoint
  DONE Edits user instructions, sets styling in new resource form for 240px, lowest breakpoint
  DONE Sets styling in food advice page for 240px, lowest breakpoint; sets specific advice items in divs
  DONE Sets styling in resources page for 240px, base width for breakpoints; edits journal home page for brevity
  DONE Sets styling in all journal entries page for 240px, base width for breakpoints; decreases font size in btn-submit buttons
  DONE Adds component for device breakpoints
  DONE Sets breakpoints for message, button font sizes
  DONE Sets breakpoints for spacing among buttons, message 
  DONE Sets breakpoints for font sizes
  DONE Sets breakpoints, adjusts spacing for top navbar contents
  DONE Removes unneeded, adds custom device categories
  DONE Adjusts nav brand font sizing for aesthetic proportionality
  DONE Sets breakpoints for font sizing, visibility



Navbars
  DONE Removes unneeded hamburger menu icon from app
  DONE Sets position, size of dropdown caret, dropdown window, dropdown items on top navbar
  DONE Sets bottom navbar font style, item spacing for 240px, lowest breakpoint


Food Advisor feature
  DONE Adds buttons to/edits Advisor page; stubs new food_advisor form
  DONE Creates, stubs container for food advisor
  DONE Creates, stubs reducer for food advisors
  DONE Adds container, reducer for food advisors to top-level components
  DONE Styles, completes content of new food advisor form
  DONE Creates action creator for new food advisor, adds it to reducer
  DONE New food advisor form persists to database on submit
  DONE Radio buttons show as checked on food advisor form when clicked
  DONE Adds, stubs FoodAdvisors
  DONE Shows raw values from most recent daily food advice input
  DONE Styles food advice results; adds no advice result logic, message
  DONE Refactors control flow in FoodAdvisors



DONE Completes increasing likes button final assessment challenge

Stub basic CSS/Bootstrap structure, styled components for home page, journal, resource features
  DONE Renames, stubs NavBar container
  DONE Stubs structure/styled components for home/advisors page
  DONE Creates, stubs BottomNavbar
  DONE Adds BottomNavbar to, stubs structure, styling for App container
  DONE Installs styled-components
  DONE Adds Layout component passing props to main content area of individual routes/pages
  DONE Adds Layout, BottomNavbar, Switch to App; removes unneeded code, css files
  DONE Creates, adds styling to, replaces stubbed styling code in TopNavbar with NavbarStyles
  DONE Replaces stubbed styling code in BottomNavbar with NavbarStyles
  DONE Adds ButtonStyles
  DONE Adds RowStyles
  DONE Adds ColumnStyles
  DONE Replaces stubbed styling code with styled components, removes unneeded structuring elements in journal home page
  DONE Affixes BottomNavbar to bottom of page
  DONE Replaces stubbed styling code with styled components, removes unneeded structuring elements in advisor page
  DONE Removes Row element, styling from Layout; adds, styles row in journal home page
  DONE Creates new classes in RowStyles
  DONE Adds, styles row in new journal entry page
  DONE Styles journals page
  DONE Styles individual journal entry page
  DONE Styles resource home page
  DONE Adds TextStyles
  DONE Styles new resource form
  DONE Adds styles to/changes styles in TextStyles
  DONE Styles resources page
  DONE Affixes TopNavbar to top of page; adjusts container top margin accordingly
  DONE Renders latest food advice with appropriate control flow
  DONE Sets base percentage for html fonts; sets navbar brand font size for lowest breakpoint

DONE Renders all journal entries latest entry first, totally through frontend code; removes unneeded code
DONE Adds DS_store to gitignore
DONE Adds global styling
DONE Styles Navbar
DONE Stubs content; adds layout components, elements; adds, styles new advice button on home page
DONE Installs, imports react-bootstrap; adds, imports Bootstrap CDN 

DONE Adds journal reducer key to container state; debugs incorrectly ordered journal entries list
DONE Creates, renders routes for new resource form, all resources; renders all resources
DONE Connects new resource form to store; persists new resource instance to database on form submission; renames feature home page urls, components for clarity
DONE Creates new resource action creator; adds new resource action to reducer
DONE Creates, stubs new resource form
DONE Connects resources to store; maps state, asynced fetch dispatch to props
DONE Creates reducer, adds it to store
DONE Creates Resources container; renders resources instances on fetch
DONE Completes Resources home page component content; edits Resources, Community home pages paths
DONE Moves journal feature files to appropriate components subdirectory
DONE Adds navlinks to planned components; stubs App, planned components

Adds delete functionality to list of journal entries
  DONE Deletes journal entry on click

DONE Renders delete button for each journal entry; event handler successfully passes entry id to delete action creator; stubs delete action
DONE Redirects to all journals view when new entry is submitted
DONE Renders all journal entries most recent entry first; each link to an entry renders cohtent, route correctlyDONE Wraps journals, journal form links in Switch statement to make routes more precise
DONE Redirects to all journal entries view if id params entered manually, not exists
DONE Redirects to all journal entries view if id params entered manually, not exists

DONE Adds working links to views of new journal entry form, all journal entries
DONE Creates routes and renders distinct views for new journal entry form, a list of all journal entries with working links to each journal entry, and each journal entry

Make all journal entries, form into separate components:
DONE Gives journal entry form, individual journal entries their own routes
DONE Gives individual journal entries their own componentDONE Renames all-journal-entries feature Journal to AllJournalEntries; creates new component Journal; stubs component for an individual journal entry; adds Project Notes - Frontend
DONE Removes browser automatically going to all journal entries page on new entry submit


*** Below is before frontend/backend notes separation

DONE Clears new journal entry input fields after submission
DONE Persists new journal entries to Rails backend; renders new journal entries to journal entry list on submission; removes unneeded code
DONE Adds pry gem; adds .DS_store files to gitignore; removes unneeded code
DONE Edits JournalInput for addJournalEntry action
DONE Renders list of journal entries
DONE Imports connect for journal feature; places JournalEntries appropriately; maps journalEntries state to props
DONE Creates containers, actions folders; separates Journal component concerns into JournalContainer, fetchJournalEntries
DONE Imports compose; sets up store for thunk, compose, redux devtools
DONE Installs, imports thunk, applyMiddleware
DONE 'Fetches persisted Journal instances successfully'
DONE Adds serializer for journal
DONE Creates, stubs JournalInput
DONE Creates, stubs Journal
DONE Creates, adds Journal link to Navbar
DONE Adds Navbar, Journal routes to App
DONE Adds react-router-dom
DONE Adds store to index.js; creates, moves App to components folder
DONE Adds redux, react-redux
DONE Adds rack-cors gem, configuration
DONE Changes directory maneuvering in Procfile
DONE Successfully renders to React server
DONE Submitting new resource persists data; makes changes for readibility; removes unneeded code
