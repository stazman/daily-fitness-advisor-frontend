CURRENT FEATURE (ongoing):

BASIC STYLING


CURRENT FRONTEND TASKS (ongoing):



  DONE Styles resource home page
  
  Adds TextStyles

  Styles new resource form
  
  Styles resources page



FUTURE TASKS (ongoing):


NAVBARS
  
  Fix TopNavbar Dropdown issue

    Note: noCaret doesn't work as documented
    
    Recode navbar to include button for dropdown with only a noCaret?

    Adjust spacing in BottomNavbar for responsiveness
  
    
  Affix BottomNavbar to vp:
  
    Center section scrolls on list pages but not otherwise


  Reorient aria controls property for BottomNavbar



UNCODED FEATURES

  Add advisor forms and output

    Nested forms replace button and below

  Add weight tracker feature

  Add community feature

  Containers for later features:
    AdvisorContainer
    TrackerContainer
    WeightLossTrackerContainer (Has form for new weighing, current weight, weight history)
    HabitTracker (Shows Record of Habits for week, month, etc.)
    CommentsContainer
    CommunityContainer
    CommunityLinksContainer
    CommentsContainer
          

RESOURCES

  Makes resource titles into links that take the user to a full description/creates option to see full description on same page?

  Truncates description on all resources page

  Adds delete functionality


JOURNAL

  Set breakpoints/media queries for new journal entry textarea, row padding

  Adds edit/update functionality to list of journal entries, individual entries?

  Search journal entries renders list of matched journal entries (will use new fetch action, input component, Rails class method?)

  Adds search bar to Journal

  Add date to journal feature



OVERALL APP


  Establish breakpoints for responsive design

  Moves store to separate component

  Adds, installs logos to manifest.json; adds relevant link to index.html?




COMPLETED TASKS: XXX

Stub basic CSS/Bootstrap structure, styled components for home page, journal, resource features
  DONE Renames, stubs NavBar container
  DONE Stubs structure/styled components for home/advisors page
  DONE Creates, stubs BottomNavbar
  DONE Adds BottomNavbar to, stubs structure, styling for App container
  DONE Installs styled-components
  DONE Adds Layout component passing props to main content area of individual routes/pages
  DONE Adds Layout, BottomNavbar, Switch to App; removes unneeded code, css files
  DONE Creates, adds styling to, replaces stubbed styling code in TopNavbar with NavbarStyles
  DONE Replaces stubbed styling code in BottomNavbar with NavbarStyles
  DONE Adds ButtonStyles
  DONE Adds RowStyles
  DONE Adds ColumnStyles
  DONE Replaces stubbed styling code with styled components, removes unneeded structuring elements in journal home page
  DONE Affixes BottomNavbar to bottom of page
  DONE Replaces stubbed styling code with styled components, removes unneeded structuring elements in advisor page
  DONE Removes Row element, styling from Layout; adds, styles row in journal home page
  DONE Creates new classes in RowStyles
  DONE Adds, styles row in new journal entry page
  DONE Styles journals page
  DONE Styles individual journal entry page










DONE Adds DS_store to gitignore
DONE Adds global styling
DONE Styles Navbar
DONE Stubs content; adds layout components, elements; adds, styles new advice button on home page
DONE Installs, imports react-bootstrap; adds, imports Bootstrap CDN 

DONE Adds journal reducer key to container state; debugs incorrectly ordered journal entries list
DONE Creates, renders routes for new resource form, all resources; renders all resources
DONE Connects new resource form to store; persists new resource instance to database on form submission; renames feature home page urls, components for clarity
DONE Creates new resource action creator; adds new resource action to reducer
DONE Creates, stubs new resource form
DONE Connects resources to store; maps state, asynced fetch dispatch to props
DONE Creates reducer, adds it to store
DONE Creates Resources container; renders resources instances on fetch
DONE Completes Resources home page component content; edits Resources, Community home pages paths
DONE Moves journal feature files to appropriate components subdirectory
DONE Adds navlinks to planned components; stubs App, planned components

Adds delete functionality to list of journal entries
  DONE Deletes journal entry on click

DONE Renders delete button for each journal entry; event handler successfully passes entry id to delete action creator; stubs delete action
DONE Redirects to all journals view when new entry is submitted
DONE Renders all journal entries most recent entry first; each link to an entry renders cohtent, route correctlyDONE Wraps journals, journal form links in Switch statement to make routes more precise
DONE Redirects to all journal entries view if id params entered manually, not exists
DONE Redirects to all journal entries view if id params entered manually, not exists

DONE Adds working links to views of new journal entry form, all journal entries
DONE Creates routes and renders distinct views for new journal entry form, a list of all journal entries with working links to each journal entry, and each journal entry

Make all journal entries, form into separate components:
DONE Gives journal entry form, individual journal entries their own routes
DONE Gives individual journal entries their own componentDONE Renames all-journal-entries feature Journal to AllJournalEntries; creates new component Journal; stubs component for an individual journal entry; adds Project Notes - Frontend


*** Below is before frontend/backend notes separation

DONE Clears new journal entry input fields after submission
DONE Persists new journal entries to Rails backend; renders new journal entries to journal entry list on submission; removes unneeded code
DONE Adds pry gem; adds .DS_store files to gitignore; removes unneeded code
DONE Edits JournalInput for addJournalEntry action
DONE Renders list of journal entries
DONE Imports connect for journal feature; places JournalEntries appropriately; maps journalEntries state to props
DONE Creates containers, actions folders; separates Journal component concerns into JournalContainer, fetchJournalEntries
DONE Imports compose; sets up store for thunk, compose, redux devtools
DONE Installs, imports thunk, applyMiddleware
DONE 'Fetches persisted Journal instances successfully'
DONE Adds serializer for journal
DONE Creates, stubs JournalInput
DONE Creates, stubs Journal
DONE Creates, adds Journal link to Navbar
DONE Adds Navbar, Journal routes to App
DONE Adds react-router-dom
DONE Adds store to index.js; creates, moves App to components folder
DONE Adds redux, react-redux
DONE Adds rack-cors gem, configuration
DONE Changes directory maneuvering in Procfile
DONE Successfully renders to React server